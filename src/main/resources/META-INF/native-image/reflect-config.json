[
  {
    "name": "[B"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBES2Parameters$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.builder.Editable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AWSElasticBlockStoreVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Affinity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AnyType",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AuthInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setClientCertificateData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientKeyData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExec",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ExecConfig"
        ]
      },
      {
        "name": "setToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AuthProviderConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AzureDiskVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.AzureFileVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.CSIVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Capabilities",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.CephFSVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.CinderVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ClaimSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Cluster",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCertificateAuthorityData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Config",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClusters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContexts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCurrentContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreferences",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.Preferences"
        ]
      },
      {
        "name": "setUsers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapEnvSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapKeySelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapProjection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ConfigMapVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Container",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getCommand",
        "parameterTypes": []
      },
      {
        "name": "getEnv",
        "parameterTypes": []
      },
      {
        "name": "getEnvFrom",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getImagePullPolicy",
        "parameterTypes": []
      },
      {
        "name": "getLifecycle",
        "parameterTypes": []
      },
      {
        "name": "getLivenessProbe",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPorts",
        "parameterTypes": []
      },
      {
        "name": "getReadinessProbe",
        "parameterTypes": []
      },
      {
        "name": "getResizePolicy",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getRestartPolicy",
        "parameterTypes": []
      },
      {
        "name": "getSecurityContext",
        "parameterTypes": []
      },
      {
        "name": "getStartupProbe",
        "parameterTypes": []
      },
      {
        "name": "getStdin",
        "parameterTypes": []
      },
      {
        "name": "getStdinOnce",
        "parameterTypes": []
      },
      {
        "name": "getTerminationMessagePath",
        "parameterTypes": []
      },
      {
        "name": "getTerminationMessagePolicy",
        "parameterTypes": []
      },
      {
        "name": "getTty",
        "parameterTypes": []
      },
      {
        "name": "getVolumeDevices",
        "parameterTypes": []
      },
      {
        "name": "getVolumeMounts",
        "parameterTypes": []
      },
      {
        "name": "getWorkingDir",
        "parameterTypes": []
      },
      {
        "name": "setCommand",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImagePullPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResources",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ResourceRequirements"
        ]
      },
      {
        "name": "setTerminationMessagePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTerminationMessagePolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVolumeMounts",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerPort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerResizePolicy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerState",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setRunning",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ContainerStateRunning"
        ]
      },
      {
        "name": "setTerminated",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ContainerStateTerminated"
        ]
      },
      {
        "name": "setWaiting",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ContainerStateWaiting"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStateRunning",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setStartedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStateTerminated",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setContainerID",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExitCode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFinishedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartedAt",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStateWaiting",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ContainerStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setContainerID",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImageID",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastState",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ContainerState"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReady",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRestartCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStarted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setState",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ContainerState"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Context",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCluster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DeleteOptions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getApiVersion",
        "parameterTypes": []
      },
      {
        "name": "getDryRun",
        "parameterTypes": []
      },
      {
        "name": "getGracePeriodSeconds",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOrphanDependents",
        "parameterTypes": []
      },
      {
        "name": "getPreconditions",
        "parameterTypes": []
      },
      {
        "name": "getPropagationPolicy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIProjection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIVolumeFile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFieldRef",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ObjectFieldSelector"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.DownwardAPIVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EmptyDirVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EnvFromSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EnvVar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EnvVarSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EphemeralContainer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.EphemeralVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ExecAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ExecConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCommand",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnv",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInteractiveMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvideClusterInfo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ExecEnvVar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FCVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FieldsV1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "setAdditionalProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FlexVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.FlockerVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GCEPersistentDiskVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GRPCAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GenericKubernetesResource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getApiVersion",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMetadata",
        "parameterTypes": []
      },
      {
        "name": "setAdditionalProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ObjectMeta"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GitRepoVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.GlusterfsVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HTTPGetAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HTTPHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HasMetadata",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HostAlias",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.HostPathVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ISCSIVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.IntOrString",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.KeyToPath",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.KubernetesResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.KubernetesResourceList",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LabelSelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMatchLabels",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LabelSelectorRequirement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Lifecycle",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LifecycleHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ListMeta",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setResourceVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.LocalObjectReference",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ManagedFieldsEntry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getApiVersion",
        "parameterTypes": []
      },
      {
        "name": "getFieldsType",
        "parameterTypes": []
      },
      {
        "name": "getFieldsV1",
        "parameterTypes": []
      },
      {
        "name": "getManager",
        "parameterTypes": []
      },
      {
        "name": "getOperation",
        "parameterTypes": []
      },
      {
        "name": "getSubresource",
        "parameterTypes": []
      },
      {
        "name": "getTime",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldsType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldsV1",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.FieldsV1"
        ]
      },
      {
        "name": "setManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubresource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NFSVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedAuthInfo",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.AuthInfo"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedCluster",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setCluster",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.Cluster"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.Context"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NamedExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Namespaced",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeAffinity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeSelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeSelectorRequirement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.NodeSelectorTerm",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ObjectFieldSelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ObjectMeta",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getCreationTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getDeletionGracePeriodSeconds",
        "parameterTypes": []
      },
      {
        "name": "getDeletionTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getFinalizers",
        "parameterTypes": []
      },
      {
        "name": "getGenerateName",
        "parameterTypes": []
      },
      {
        "name": "getGeneration",
        "parameterTypes": []
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getManagedFields",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getOwnerReferences",
        "parameterTypes": []
      },
      {
        "name": "getResourceVersion",
        "parameterTypes": []
      },
      {
        "name": "getSelfLink",
        "parameterTypes": []
      },
      {
        "name": "getUid",
        "parameterTypes": []
      },
      {
        "name": "setAnnotations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCreationTimestamp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeletionGracePeriodSeconds",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDeletionTimestamp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFinalizers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGenerateName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGeneration",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLabels",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setManagedFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerReferences",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setResourceVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUid",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.OwnerReference",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getApiVersion",
        "parameterTypes": []
      },
      {
        "name": "getBlockOwnerDeletion",
        "parameterTypes": []
      },
      {
        "name": "getController",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUid",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBlockOwnerDeletion",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setController",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUid",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolumeClaimSpec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolumeClaimTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PersistentVolumeClaimVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PhotonPersistentDiskVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Pod",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ObjectMeta"
        ]
      },
      {
        "name": "setSpec",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.PodSpec"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.PodStatus"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodAffinity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodAffinityTerm",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodAntiAffinity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodCondition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastProbeTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastTransitionTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodDNSConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodDNSConfigOption",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodIP",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodList",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ListMeta"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodOS",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodReadinessGate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodResourceClaim",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodSchedulingGate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodSecurityContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodSpec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getActiveDeadlineSeconds",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getAffinity",
        "parameterTypes": []
      },
      {
        "name": "getAutomountServiceAccountToken",
        "parameterTypes": []
      },
      {
        "name": "getContainers",
        "parameterTypes": []
      },
      {
        "name": "getDnsConfig",
        "parameterTypes": []
      },
      {
        "name": "getDnsPolicy",
        "parameterTypes": []
      },
      {
        "name": "getEnableServiceLinks",
        "parameterTypes": []
      },
      {
        "name": "getEphemeralContainers",
        "parameterTypes": []
      },
      {
        "name": "getHostAliases",
        "parameterTypes": []
      },
      {
        "name": "getHostIPC",
        "parameterTypes": []
      },
      {
        "name": "getHostNetwork",
        "parameterTypes": []
      },
      {
        "name": "getHostPID",
        "parameterTypes": []
      },
      {
        "name": "getHostUsers",
        "parameterTypes": []
      },
      {
        "name": "getHostname",
        "parameterTypes": []
      },
      {
        "name": "getImagePullSecrets",
        "parameterTypes": []
      },
      {
        "name": "getInitContainers",
        "parameterTypes": []
      },
      {
        "name": "getNodeName",
        "parameterTypes": []
      },
      {
        "name": "getNodeSelector",
        "parameterTypes": []
      },
      {
        "name": "getOs",
        "parameterTypes": []
      },
      {
        "name": "getOverhead",
        "parameterTypes": []
      },
      {
        "name": "getPreemptionPolicy",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getPriorityClassName",
        "parameterTypes": []
      },
      {
        "name": "getReadinessGates",
        "parameterTypes": []
      },
      {
        "name": "getResourceClaims",
        "parameterTypes": []
      },
      {
        "name": "getRestartPolicy",
        "parameterTypes": []
      },
      {
        "name": "getRuntimeClassName",
        "parameterTypes": []
      },
      {
        "name": "getSchedulerName",
        "parameterTypes": []
      },
      {
        "name": "getSchedulingGates",
        "parameterTypes": []
      },
      {
        "name": "getSecurityContext",
        "parameterTypes": []
      },
      {
        "name": "getServiceAccount",
        "parameterTypes": []
      },
      {
        "name": "getServiceAccountName",
        "parameterTypes": []
      },
      {
        "name": "getSetHostnameAsFQDN",
        "parameterTypes": []
      },
      {
        "name": "getShareProcessNamespace",
        "parameterTypes": []
      },
      {
        "name": "getSubdomain",
        "parameterTypes": []
      },
      {
        "name": "getTerminationGracePeriodSeconds",
        "parameterTypes": []
      },
      {
        "name": "getTolerations",
        "parameterTypes": []
      },
      {
        "name": "getTopologySpreadConstraints",
        "parameterTypes": []
      },
      {
        "name": "getVolumes",
        "parameterTypes": []
      },
      {
        "name": "setContainers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDnsPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableServiceLinks",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNodeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPreemptionPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRestartPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchedulerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecurityContext",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.PodSecurityContext"
        ]
      },
      {
        "name": "setServiceAccount",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServiceAccountName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTerminationGracePeriodSeconds",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTolerations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVolumes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConditions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContainerStatuses",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHostIP",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPodIP",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPodIPs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setQosClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PodTemplateSpec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getMetadata",
        "parameterTypes": []
      },
      {
        "name": "getSpec",
        "parameterTypes": []
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ObjectMeta"
        ]
      },
      {
        "name": "setSpec",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.PodSpec"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PortworxVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Preferences",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.PreferredSchedulingTerm",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Probe",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ProjectedVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDefaultMode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Quantity$Deserializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.QuobyteVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.RBDVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ReplicationControllerBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ReplicationControllerList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ResourceClaim",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ResourceFieldSelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ResourceRequirements",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SELinuxOptions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ScaleIOVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SeccompProfile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretEnvSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretKeySelector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretProjection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecretVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.SecurityContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ServiceAccountBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ServiceAccountList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ServiceAccountTokenProjection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setExpirationSeconds",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ServiceBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.ServiceList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Status",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDetails",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.StatusDetails"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ListMeta"
        ]
      },
      {
        "name": "setReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.StatusCause",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.StatusDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.StorageOSVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Sysctl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.TCPSocketAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Toleration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEffect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTolerationSeconds",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.TopologySpreadConstraint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.TypedLocalObjectReference",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.TypedObjectReference",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.Volume",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProjected",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ProjectedVolumeSource"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VolumeDevice",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VolumeMount",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMountPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VolumeProjection",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConfigMap",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ConfigMapProjection"
        ]
      },
      {
        "name": "setDownwardAPI",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.DownwardAPIProjection"
        ]
      },
      {
        "name": "setServiceAccountToken",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ServiceAccountTokenProjection"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.VsphereVirtualDiskVolumeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.WatchEvent",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setObject",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.KubernetesResource"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.WeightedPodAffinityTerm",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.WindowsSecurityContextOptions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.apps.DeploymentBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.apps.DeploymentList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.apps.ReplicaSetBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.apps.ReplicaSetList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.apps.StatefulSetBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.apps.StatefulSetList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.Job",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getApiVersion",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMetadata",
        "parameterTypes": []
      },
      {
        "name": "getSpec",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.ObjectMeta"
        ]
      },
      {
        "name": "setSpec",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.batch.v1.JobSpec"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.batch.v1.JobStatus"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.JobBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.JobCondition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setLastProbeTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastTransitionTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.JobList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.JobSpec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getActiveDeadlineSeconds",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalProperties",
        "parameterTypes": []
      },
      {
        "name": "getBackoffLimit",
        "parameterTypes": []
      },
      {
        "name": "getBackoffLimitPerIndex",
        "parameterTypes": []
      },
      {
        "name": "getCompletionMode",
        "parameterTypes": []
      },
      {
        "name": "getCompletions",
        "parameterTypes": []
      },
      {
        "name": "getManualSelector",
        "parameterTypes": []
      },
      {
        "name": "getMaxFailedIndexes",
        "parameterTypes": []
      },
      {
        "name": "getParallelism",
        "parameterTypes": []
      },
      {
        "name": "getPodFailurePolicy",
        "parameterTypes": []
      },
      {
        "name": "getPodReplacementPolicy",
        "parameterTypes": []
      },
      {
        "name": "getSelector",
        "parameterTypes": []
      },
      {
        "name": "getSuspend",
        "parameterTypes": []
      },
      {
        "name": "getTemplate",
        "parameterTypes": []
      },
      {
        "name": "getTtlSecondsAfterFinished",
        "parameterTypes": []
      },
      {
        "name": "setBackoffLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCompletionMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompletions",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParallelism",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelector",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.LabelSelector"
        ]
      },
      {
        "name": "setSuspend",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTemplate",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.PodTemplateSpec"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.JobStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setActive",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCompletionTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReady",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSucceeded",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUncountedTerminatedPods",
        "parameterTypes": [
          "io.fabric8.kubernetes.api.model.batch.v1.UncountedTerminatedPods"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.PodFailurePolicy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.PodFailurePolicyOnExitCodesRequirement",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.PodFailurePolicyOnPodConditionsPattern",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.PodFailurePolicyRule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.fabric8.kubernetes.api.model.batch.v1.UncountedTerminatedPods",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setSucceeded",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "io.fabric8.kubernetes.api.model.certificates.v1.CertificateSigningRequestBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.certificates.v1.CertificateSigningRequestList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.certificates.v1beta1.CertificateSigningRequestBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.certificates.v1beta1.CertificateSigningRequestList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.extensions.DeploymentBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.extensions.DeploymentList"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.extensions.ReplicaSetBuilder"
  },
  {
    "name": "io.fabric8.kubernetes.api.model.extensions.ReplicaSetList"
  },
  {
    "name": "io.fabric8.kubernetes.client.impl.KubernetesClientImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "io.fabric8.kubernetes.client.http.HttpClient",
          "io.fabric8.kubernetes.client.Config",
          "io.fabric8.kubernetes.client.KubernetesClientBuilder$ExecutorSupplier",
          "io.fabric8.kubernetes.client.utils.KubernetesSerialization"
        ]
      }
    ]
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ]
  },
  {
    "name": "java.lang.Throwable",
    "methods": [
      {
        "name": "addSuppressed",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.cert.PKIXRevocationChecker"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [
      {
        "name": "aux"
      },
      {
        "name": "status"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLParameters",
    "methods": [
      {
        "name": "setApplicationProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLSocket",
    "methods": [
      {
        "name": "getApplicationProtocol",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "jdk.internal.misc.Unsafe"
  },
  {
    "name": "okhttp3.internal.Internal",
    "methods": [
      {
        "name": "realConnectionPool",
        "parameterTypes": [
          "okhttp3.ConnectionPool"
        ]
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLS13Context",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
